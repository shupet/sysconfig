#! /usr/bin/env python
"""
Random Password Generator
Author: Tyler Shupe
"""

import string, sys, getopt
from random import randint

# Globals
mySet = ''

#usage function
def usage():
    print 'PasswordGen arguments'
    print '\t-h, --help: print the usage statements and exit'
    print '\t-l num, --length num: specify password length'
    print '\t-v: be verbose'
    print '\t-p: use password with punctuation'
    print '\t-x: generate a hexadecimal password'
    print '\t-i: force password to be all lower case'
    print '\t-u: force password to be all upper case'

#set up set to user
def init(myset, verbose, case):
    mySet = string.ascii_letters + string.digits + " "
    if myset == 1:
        mySet += string.punctuation
    elif myset ==2:
        mySet = string.hexdigits
    if verbose:
        print 'Character Set: \n%s\n' % (list(mySet))
    if case == "upper":
        return list(mySet.upper())
    elif case == "lower":
        return list(mySet.lower())
    else:
        return list(mySet)

# Error check user input
def isLetter(s):
    for char in s:
        if not (char in list(string.digits)):
            return False
    return True

# Computes a random string of chars with lenght of myIn
def computePass(myNum, mySet):
    passwordSet = ''
    counter = 0
    while (counter < myNum):
        x = randint(0,len(mySet)-1)

        passwordSet += mySet[x]

        counter += 1
    return passwordSet

# Main
def main():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hl:vpxiu", ["help", "length=", "uppercase", "lowercase"])
    except getopt.GetoptError as err:
        # print help information and exit:
        print str(err) # will print something like "option -a not recognized"
        usage()
        sys.exit(1)
    output = None
    verbose = False
    length = 16
    punctuation = False
    hexset = False
    init_type = 0
    case = "neither"
    for o, a in opts:
        if o == "-v":
            verbose = True
        elif o in ("-h", "--help"):
            usage()
            sys.exit(0)
        elif o in ("-l", "--length"):
            if isLetter(a) is False:
                print 'String is not a number, defaulting to 16'
            else:
                length = int(a)
        elif o == "-p":
            punctuation = True
        elif o == "-x":
            hexset = True
        elif o in ("-i", "--lowercase"):
            case = "lower"
        elif o in ("-u", "--uppercase"):
            case = "upper"
        else:
            assert False, "unhandled option"

    if hexset is True:
        init_type = 2
    elif punctuation is True:
        init_type = 1

    mySet = init(init_type,verbose, case)
    passwordSet = computePass(length, mySet)

    print "\nRandom Password: \'%s\'\n" % (passwordSet)

if __name__ == "__main__":
	main()
